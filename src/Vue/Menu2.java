/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import Model.*;
import Util.DateModulable;
import Vue.Competences.AjouterCompetenceJFrame;
import Vue.Missions.AjouterMissionJFrame;
import Vue.Parametres.ParametreJFrame;
import Vue.Personnel.AjouterModifierPersonnelJFrame;
import Vue.boutonsJtable.ButtonModifierEditor;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.*;

/**
 * Fenetre principale de l'application. Contient les quatre panneaux principaux
 * de l'application.
 *
 * @author guilhem, sandeox
 */
public class Menu2 extends javax.swing.JFrame {

    private Entreprise entC;
    private ImageIcon iconeSuppr;
    private ImageIcon iconeModif;

    /**
     * Creation de la fenetre.
     */
    public Menu2() throws Exception {

        File fPersonnels = new File("resources\\csv\\liste_personnel.csv");
        File fCompetences = new File("resources\\csv\\liste_competences.csv");
        File fCompetencesPerso = new File("resources\\csv\\competences_personnel.csv");
        File fMission = new File("resources\\csv\\liste_missions.csv");
        File fCompetenceMission = new File("resources\\csv\\competence_mission.csv");
        File fPersonnelMission = new File("resources\\csv\\personnel_mission.csv");

        ImageIcon icon = new ImageIcon("resources\\images\\pencil.png");
        Image img = icon.getImage();
        Image newimg = img.getScaledInstance(20, 20, java.awt.Image.SCALE_SMOOTH);
        iconeModif = new ImageIcon(newimg);
        icon = new ImageIcon("resources\\images\\del.png");
        img = icon.getImage();
        newimg = img.getScaledInstance(30, 30, java.awt.Image.SCALE_SMOOTH);
        iconeSuppr = new ImageIcon(newimg);

        initComponents();
        this.setLocationRelativeTo(null); // positionner la fenetre au centre de l'écran
        this.setResizable(false); //la fenetre ne peut pas etre redimensionée
        // dans le but de faire évoluer l'application
        Entreprise.chargerFichiers(fPersonnels, fCompetences, fCompetencesPerso, fMission, fCompetenceMission, fPersonnelMission);
        remplirTableauPersonnel();
        remplirTableauMissions();
        remplirTableauCompetences();
        remplirTableauMissionsSynth();
        remplirListePersoSansMiss();

        //Empecher la modification 
        jTableDuPersonnel.setDefaultEditor(Object.class, null);
        jTableCompetences.setDefaultEditor(Object.class, null);
        jTableMission.setDefaultEditor(Object.class, null);

        /* ----- Mise à jour des CSV à la fermeture de l'application -------- */
        Runtime.getRuntime().addShutdownHook(new Thread() {
            @Override
            public void run() {
                File fPersonnels = new File("resources\\csv\\liste_personnel.csv");
                File fCompetences = new File("resources\\csv\\liste_competences.csv");
                File fCompetencesPerso = new File("resources\\csv\\competences_personnel.csv");
                File fMission = new File("resources\\csv\\liste_missions.csv");
                File fCompetenceMission = new File("resources\\csv\\competence_mission.csv");
                File fPersonnelMission = new File("resources\\csv\\personnel_mission.csv");
                Entreprise.sauverFichiers(fPersonnels, fCompetences, fCompetencesPerso, fMission, fCompetenceMission, fPersonnelMission);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTitre = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanelTdB = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableSyntheseMission = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelTotMiss = new javax.swing.JLabel();
        jLabelTotSansMiss = new javax.swing.JLabel();
        jPanelMission = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableMission = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButtonAddMission = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldRechNomMiss = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldRechEtat = new javax.swing.JTextField();
        jPanelPersonnel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDuPersonnel = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButtonAjouterPersonne = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldRechNom = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jPanelCompetence = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCompetences = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanelTitre.setBackground(new java.awt.Color(61, 95, 173));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 75)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nom de l'entreprise");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setPreferredSize(new java.awt.Dimension(42, 42));
        ImageIcon icon = new ImageIcon("resources\\images\\reglage_icon.png") ;
        Image img = icon.getImage();
        Image newimg = img.getScaledInstance( 30, 30,  java.awt.Image.SCALE_SMOOTH) ;
        icon = new ImageIcon( newimg );
        jButton1.setIcon(icon);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTitreLayout = new javax.swing.GroupLayout(jPanelTitre);
        jPanelTitre.setLayout(jPanelTitreLayout);
        jPanelTitreLayout.setHorizontalGroup(
            jPanelTitreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTitreLayout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelTitreLayout.setVerticalGroup(
            jPanelTitreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTitreLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTitreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelTitre, java.awt.BorderLayout.PAGE_START);

        jTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jPanelTdB.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 48)); // NOI18N
        jLabel3.setText("Bienvenue");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel4.setText("Vos Missions : ");

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.getViewport().setBackground(Color.WHITE);

        DefaultTableModel modelSynthMissions = new DefaultTableModel();
        modelSynthMissions.addColumn("Id");
        modelSynthMissions.addColumn("Nom de la mission");
        modelSynthMissions.addColumn("Etat");
        jTableSyntheseMission.setModel(modelSynthMissions);
        jTableSyntheseMission.setGridColor(new java.awt.Color(102, 102, 102));
        jTableSyntheseMission.setRowHeight(jTableSyntheseMission.getRowHeight() + 7);
        jTableSyntheseMission.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jTableSyntheseMission);

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel5.setText("Ils n'ont aucune mission : ");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Jean Leguin", "Bernard Tapis", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(jList1);

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel6.setText("Nombre de personnels non-affectés:");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel7.setText("Nombre total de missions :");

        jLabelTotMiss.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        jLabelTotSansMiss.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanelTdBLayout = new javax.swing.GroupLayout(jPanelTdB);
        jPanelTdB.setLayout(jPanelTdBLayout);
        jPanelTdBLayout.setHorizontalGroup(
            jPanelTdBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTdBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTdBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelTdBLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTotMiss, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanelTdBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelTdBLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTotSansMiss, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelTdBLayout.setVerticalGroup(
            jPanelTdBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTdBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTdBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTdBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTdBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTdBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6))
                    .addComponent(jLabelTotMiss, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotSansMiss, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Tableau de bord", jPanelTdB);

        jPanelMission.setBackground(new java.awt.Color(255, 255, 255));
        jPanelMission.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.getViewport().setBackground(Color.WHITE);

        DefaultTableModel modelMissions = new DefaultTableModel();
        modelMissions.addColumn("Id");
        modelMissions.addColumn("Nom de la mission");
        modelMissions.addColumn("Date de début");
        modelMissions.addColumn("Date de fin estimée");
        modelMissions.addColumn("Personnel Néccessaire");
        modelMissions.addColumn("Etat");
        modelMissions.addColumn("");
        modelMissions.addColumn("");
        jTableMission.setModel(modelMissions);
        jTableMission.setRowHeight(jTableMission.getRowHeight() + 15);
        jTableMission.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableMission.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMissionMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableMission);

        jPanelMission.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jButtonAddMission.setText("Ajouter une mission");
        jButtonAddMission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddMissionActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAddMission, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Dénomination : ");
        jPanel2.add(jLabel1);

        jTextFieldRechNomMiss.setPreferredSize(new java.awt.Dimension(100, 24));
        jTextFieldRechNomMiss.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldRechNomMissCaretUpdate(evt);
            }
        });
        jPanel2.add(jTextFieldRechNomMiss);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setPreferredSize(new java.awt.Dimension(10, 24));
        jPanel2.add(jSeparator1);

        jLabel8.setText("Etat :");
        jPanel2.add(jLabel8);

        jTextFieldRechEtat.setPreferredSize(new java.awt.Dimension(100, 24));
        jTextFieldRechEtat.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldRechEtatCaretUpdate(evt);
            }
        });
        jPanel2.add(jTextFieldRechEtat);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanelMission.add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jTabbedPane.addTab("Gestion des missions", jPanelMission);

        jPanelPersonnel.setBackground(new java.awt.Color(255, 255, 255));
        jPanelPersonnel.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.getViewport().setBackground(Color.WHITE);

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nom");
        model.addColumn("Prénom");
        model.addColumn("Date d'embauche");
        model.addColumn("Compétences");
        model.addColumn("");
        model.addColumn("");
        jTableDuPersonnel.setModel(model);
        jTableDuPersonnel.setRowHeight(jTableDuPersonnel.getRowHeight() + 7);
        jTableDuPersonnel.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableDuPersonnel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTableDuPersonnelFocusLost(evt);
            }
        });
        jTableDuPersonnel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDuPersonnelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDuPersonnel);
        jTableDuPersonnel.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        jPanelPersonnel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jButtonAjouterPersonne.setText("Ajouter une personne");
        jButtonAjouterPersonne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAjouterPersonneActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonAjouterPersonne, java.awt.BorderLayout.PAGE_END);

        jLabel9.setText("Nom :");
        jPanel4.add(jLabel9);

        jTextFieldRechNom.setPreferredSize(new java.awt.Dimension(100, 24));
        jTextFieldRechNom.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldRechNomCaretUpdate(evt);
            }
        });
        jPanel4.add(jTextFieldRechNom);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setPreferredSize(new java.awt.Dimension(10, 24));
        jPanel4.add(jSeparator2);

        jLabel10.setText("Prénom : ");
        jPanel4.add(jLabel10);

        jTextField2.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextField2.setName(""); // NOI18N
        jTextField2.setPreferredSize(new java.awt.Dimension(100, 24));
        jTextField2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField2CaretUpdate(evt);
            }
        });
        jPanel4.add(jTextField2);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setPreferredSize(new java.awt.Dimension(10, 24));
        jPanel4.add(jSeparator3);

        jPanel3.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanelPersonnel.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jTabbedPane.addTab("Gestion du personnel", jPanelPersonnel);

        jPanelCompetence.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.getViewport().setBackground(Color.WHITE);

        DefaultTableModel model2 = new DefaultTableModel();
        model2.addColumn("Dénomination anglaise");
        model2.addColumn("Dénomination française");
        jTableCompetences.setModel(model2);
        jTableCompetences.setRowHeight(jTableCompetences.getRowHeight() + 7);
        jScrollPane2.setViewportView(jTableCompetences);

        javax.swing.GroupLayout jPanelCompetenceLayout = new javax.swing.GroupLayout(jPanelCompetence);
        jPanelCompetence.setLayout(jPanelCompetenceLayout);
        jPanelCompetenceLayout.setHorizontalGroup(
            jPanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
        );
        jPanelCompetenceLayout.setVerticalGroup(
            jPanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCompetenceLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 79, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Gestion des compétences", jPanelCompetence);

        getContentPane().add(jTabbedPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAjouterPersonneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAjouterPersonneActionPerformed
        AjouterModifierPersonnelJFrame ajoutP = new AjouterModifierPersonnelJFrame();
        ajoutP.setVisible(true);
        int rowIndex = jTableDuPersonnel.getSelectedRow(); // Récupère la ligne du champ cliqué
        int colIndex = 0;
        /* -- Envoie de l'id pour remplir la frame, envois de la ligne pour actualiser --------*/
        ajoutP.remplirFormPersonnel(-1, jTableDuPersonnel, rowIndex, colIndex, this);
    }//GEN-LAST:event_jButtonAjouterPersonneActionPerformed

    private void jTableDuPersonnelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDuPersonnelMouseClicked
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (evt.getClickCount() == 2 && table.getSelectedRow() != -1) {
            int id = getColZeroValueSelected();
            //Load Frame with selected ID
            AjouterModifierPersonnelJFrame apf = new AjouterModifierPersonnelJFrame();
            apf.setVisible(true);
            /* -- Envoie de l'id pour remplir la frame, envois de la ligne pour actualiser --------*/
            apf.remplirFormPersonnel(id, table, row, 0, this);
        }
    }//GEN-LAST:event_jTableDuPersonnelMouseClicked

    private void jTableDuPersonnelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableDuPersonnelFocusLost

    }//GEN-LAST:event_jTableDuPersonnelFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ParametreJFrame pFrame = new ParametreJFrame(this);
        pFrame.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTableMissionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMissionMouseClicked
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if (evt.getClickCount() == 2 && table.getSelectedRow() != -1) {
            int id = getColZeroValueSelectedMission();

            AjouterMissionJFrame apf = new AjouterMissionJFrame();
            apf.setVisible(true);
            /* -- Envoie de l'id pour remplir la frame, envois de la ligne pour actualiser --------*/
            apf.remplirFormMission(id, table, row, 0, apf);
        }
    }//GEN-LAST:event_jTableMissionMouseClicked

    private void jButtonAddMissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddMissionActionPerformed
        /*----- Ajouter une mission -----*/

        //Get the id
        int id = -1;
        //Load Frame with selected ID
        AjouterMissionJFrame apf = new AjouterMissionJFrame();
        apf.setVisible(true);
        /* -- Envoie de l'id pour remplir la frame, envois de la ligne pour actualiser --------*/
        apf.remplirFormMission(id, jTableMission, jTableMission.getSelectedRow(), 0, apf);
    }//GEN-LAST:event_jButtonAddMissionActionPerformed

    private void jTextFieldRechNomMissCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldRechNomMissCaretUpdate
        updateFiltreMiss();
    }//GEN-LAST:event_jTextFieldRechNomMissCaretUpdate

    private void jTextFieldRechEtatCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldRechEtatCaretUpdate
        updateFiltreMiss();
    }//GEN-LAST:event_jTextFieldRechEtatCaretUpdate

    private void jTextFieldRechNomCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldRechNomCaretUpdate
        updateFiltrePers();
    }//GEN-LAST:event_jTextFieldRechNomCaretUpdate

    private void jTextField2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField2CaretUpdate
        updateFiltrePers();
    }//GEN-LAST:event_jTextField2CaretUpdate

    /**
     * Met a jour le filtre de la table des missions pour matcher avec les
     * jtextfield
     */
    public void updateFiltreMiss() {

        HashMap<Integer, String> filtresMiss;
        filtresMiss = new HashMap<>();
        filtresMiss.put(1, jTextFieldRechNomMiss.getText());
        filtresMiss.put(5, jTextFieldRechEtat.getText());
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(jTableMission.getModel());
        RowFilter<TableModel, Integer> filtre = new MonRowFilter(filtresMiss);
        jTableMission.setRowSorter(rowSorter);
        rowSorter.setRowFilter(filtre);
    }

    /**
     * Met a jour le filtre de la table personnel pour matcher avec les
     * jtextfield
     */
    public void updateFiltrePers() {

        HashMap<Integer, String> filtresPers;
        filtresPers = new HashMap<>();
        filtresPers.put(1, jTextFieldRechNom.getText());
        filtresPers.put(2, jTextField2.getText());

        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(jTableDuPersonnel.getModel());
        RowFilter<TableModel, Integer> filtre = new MonRowFilter(filtresPers);
        jTableDuPersonnel.setRowSorter(rowSorter);
        rowSorter.setRowFilter(filtre);
    }

    private int getColZeroValueHover(int row, int col) {
        //get row pointed of pointer
        int rowIndex = row;
        //get column 0 (here ID)
        int colIndex = col;
        //Get the column 0 (here ID) from the model whenever it's sort or not (due to issue on sort)
        Object colZeroValue = (jTableDuPersonnel.getModel().getValueAt(jTableDuPersonnel.convertRowIndexToModel(row), col));
        //System.out.println(colZeroValue.getClass()); 
        int id = 0;
        //Get the id
        try {
            //parse object to string then int
            String stringId = (String) colZeroValue;
            id = Integer.parseInt(stringId);
            return id;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return id;
    }

    /**
     * Retounre la bonne valeur selectionné dans la table mission, meme si celle
     * ci est triée.
     *
     * @return l'index de la colonne selectionné
     */
    public int getColZeroValueSelectedMission() {
        //Get the column 0 (here ID) from the model whenever it's sort or not (due to issue on sort)
        Object colZeroValue = (jTableMission.getModel().getValueAt(jTableMission.convertRowIndexToModel(jTableMission.getSelectedRow()), 0));
        //System.out.println(colZeroValue.getClass()); 
        int id = 0;
        //Get the id
        try {
            //parse object to string then int
            String stringId = (String) colZeroValue;
            id = Integer.parseInt(stringId);
            return id;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return id;
    }

    /**
     * Retounre la bonne valeur selectionné dans la table personnel, meme si
     * celle ci est triée.
     *
     * @return l'index de la colonne selectionné
     */
    public int getColZeroValueSelected() {
        //Get the column 0 (here ID) from the model whenever it's sort or not (due to issue on sort)
        Object colZeroValue = (jTableDuPersonnel.getModel().getValueAt(jTableDuPersonnel.convertRowIndexToModel(jTableDuPersonnel.getSelectedRow()), 0));
        //System.out.println(colZeroValue.getClass()); 
        int id = 0;
        //Get the id
        try {
            //parse object to string then int
            String stringId = (String) colZeroValue;
            id = Integer.parseInt(stringId);
            return id;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        return id;
    }

    /**
     * Attache les tooltips decrivant les competences en detail d'un personnel
     */
    public void setToolTipCompetence() {
        jTableDuPersonnel.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent evt) {
                //mouse pointer
                java.awt.Point p = evt.getPoint();
                //get row pointed of pointer
                int rowIndex = jTableDuPersonnel.rowAtPoint(p);
                //get column 0 (here ID)
                int colIndex = 0;
                //get current id hover
                int id = getColZeroValueHover(rowIndex, colIndex);

                //Get the personnel
                Personnel lePerso = Entreprise.findPersonnelById(id);
                //Get competence of this personnel
                HashMap<String, Competence> competences = Entreprise.getPersonnelCompetence(lePerso);

                String value = "<html>"; //obligé de mettre des balises html pour le saut à la ligne du tooltip
                if (competences.isEmpty()) {
                    value += "Aucune compétence";
                } else {
                    for (Map.Entry<String, Competence> laCompetence : competences.entrySet()) {
                        value += laCompetence.getValue().getLibelleFra() + "<br/>";
                    }
                }
                value += "</html>";

                if (jTableDuPersonnel.columnAtPoint(p) == jTableDuPersonnel.getColumnCount() - 3) {
                    jTableDuPersonnel.setToolTipText(value);
                } else {
                    jTableDuPersonnel.setToolTipText(null);
                }

            }
        });
    }

    /**
     * Rempli la JTable du personnel avec les informations d'Entreprise
     */
    public void remplirTableauPersonnel() {
        HashMap<Integer, Personnel> lePersonnel = entC.getlistePersonnel();

        for (Map.Entry<Integer, Personnel> e : lePersonnel.entrySet()) {
            /*---- Si le personnel n'a aucune compétence ----*/
            String comp = null;
            if (e.getValue().getListeCompetences().isEmpty()) {
                comp = "0";
            } else {
                comp = "" + e.getValue().getListeCompetences().size();
            }

            String line = e.getKey() + ";" + e.getValue().getNom() + ";" + e.getValue().getPrenom() + ";" + e.getValue().getDateNaissString() + ";" + "ⓘ " + comp;
            String[] laLigne = line.split(";");
            ((DefaultTableModel) jTableDuPersonnel.getModel()).addRow(laLigne);

        }

        jTableDuPersonnel.setAutoCreateRowSorter(true);

        /* ---- Masquer column ID ---- */
        TableColumnModel tcm = jTableDuPersonnel.getColumnModel();
        tcm.removeColumn(tcm.getColumn(0));

        jTableDuPersonnel.getColumnModel().getColumn(4).setCellRenderer(new ButtonModifierRenderer(iconeModif, "modifier"));
        jTableDuPersonnel.getColumnModel().getColumn(4).setCellEditor(new ButtonModifierEditor(new JCheckBox(), iconeModif, "modifier", jTableDuPersonnel, "personnel", this));
        jTableDuPersonnel.getColumnModel().getColumn(4).setPreferredWidth(10);

        jTableDuPersonnel.getColumnModel().getColumn(5).setCellRenderer(new ButtonModifierRenderer(iconeSuppr, "supprimer"));
        jTableDuPersonnel.getColumnModel().getColumn(5).setCellEditor(new ButtonModifierEditor(new JCheckBox(), iconeModif, "supprimer", jTableDuPersonnel, "personnel", this));
        jTableDuPersonnel.getColumnModel().getColumn(5).setPreferredWidth(10);

    }

    /**
     * Rempli la JTable des missions avec les informations d'Entreprise
     */
    public void remplirTableauMissions() {

        DefaultTableModel modelMission = (DefaultTableModel) jTableMission.getModel();
        modelMission.setRowCount(0);

        for (Map.Entry m : Entreprise.getMissions().entrySet()) {
            Mission miss = (Mission) m.getValue();
            Object[] line = {String.valueOf(m.getKey()), miss.getNom(), miss.getDateDebutString(),
                miss.getDateFinEstimeString(), String.valueOf(miss.getNbPersMin()),
                miss.getEtatString(), "Modifier"};
            ((DefaultTableModel) jTableMission.getModel()).addRow(line);
        }
        jTableMission.setAutoCreateRowSorter(true);

        /* ---- Masquer column ID ---- */
        TableColumnModel tcm = jTableMission.getColumnModel();
        if (tcm.getColumnCount() == 8) {
            tcm.removeColumn(tcm.getColumn(0));
        }
        jTableMission.getColumnModel().getColumn(4).setCellRenderer(rMissionEtat);
        jTableMission.getColumnModel().getColumn(5).setCellRenderer(new ButtonModifierRenderer(iconeModif, "modifier"));
        jTableMission.getColumnModel().getColumn(5).setCellEditor(new ButtonModifierEditor(new JCheckBox(), iconeModif, "modifier", jTableMission, "mission", this));
        jTableMission.getColumnModel().getColumn(5).setPreferredWidth(10);
        jTableMission.getColumnModel().getColumn(6).setCellRenderer(new ButtonModifierRenderer(iconeSuppr, "supprimer"));
        jTableMission.getColumnModel().getColumn(6).setCellEditor(new ButtonModifierEditor(new JCheckBox(), iconeModif, "supprimer", jTableMission, "mission", this));
        jTableMission.getColumnModel().getColumn(6).setPreferredWidth(10);

    }

    /**
     * Rempli la JTable de la synthese des missions avec les informations
     * d'Entreprise
     */
    public void remplirTableauMissionsSynth() {

        DefaultTableModel modelMission = (DefaultTableModel) jTableSyntheseMission.getModel();
        modelMission.setRowCount(0);

        int cpt = 0;

        for (Map.Entry m : Entreprise.getMissions().entrySet()) {
            Mission miss = (Mission) m.getValue();
            String[] line = {String.valueOf(m.getKey()), miss.getNom(), miss.getEtatString()};
            ((DefaultTableModel) jTableSyntheseMission.getModel()).addRow(line);
            cpt++;
        }
        jLabelTotMiss.setText(String.valueOf(cpt));
        jTableSyntheseMission.setAutoCreateRowSorter(true);

        /* ---- Masquer column ID ---- */
        TableColumnModel tcm = jTableSyntheseMission.getColumnModel();
        if (tcm.getColumnCount() == 3) {
            tcm.removeColumn(tcm.getColumn(0));
        }
        jTableSyntheseMission.getColumnModel().getColumn(1).setCellRenderer(rMissionEtat);

    }

    /**
     * Rempli la JTable des competences avec les informations d'Entreprise
     */
    public void remplirTableauCompetences() {
        HashMap<String, Competence> lesCompetences = Entreprise.getCompetences();

        for (Map.Entry c : lesCompetences.entrySet()) {
            Competence cpt = (Competence) c.getValue();
            String line = cpt.getLibelleAng() + ";" + cpt.getLibelleFra();
            String[] laLigne = line.split(";");
            ((DefaultTableModel) jTableCompetences.getModel()).addRow(laLigne);
        }
        jTableCompetences.setAutoCreateRowSorter(true);

        /* --- Ajouter le tool tip de compétence --- */
        setToolTipCompetence();
    }

    /**
     * Rempli la JListe des personnels sans mission avec les informations
     * d'Entreprise
     */
    public void remplirListePersoSansMiss() {
        HashMap<Integer, Personnel> liste = Entreprise.getPersoSansMiss();
        DefaultListModel modelListeSansMiss = new DefaultListModel();
        int nbJour;
        int cpt = 0;
        String p;
        for (Map.Entry<Integer, Personnel> perso : liste.entrySet()) {
            //Fr lib
            nbJour = Entreprise.getNbJourNonTrav(perso.getKey());
            if (nbJour == -1) {
                p = perso.getValue().getNom() + " " + perso.getValue().getPrenom() + " n'a jamais travaillé.";
            } else {
                if (nbJour == 0) {
                    p = perso.getValue().getNom() + " " + perso.getValue().getPrenom() + " a finis sa dernière mission aujourd'hui.";
                } else {
                    p = perso.getValue().getNom() + " " + perso.getValue().getPrenom() + " n'a pas travaillé depuis " + nbJour + " jours.";
                }

            }
            modelListeSansMiss.addElement(p);
            cpt++;
        }
        jList1.setModel(modelListeSansMiss);
        jLabelTotSansMiss.setText(String.valueOf(cpt));
    }

    /**
     * Met a jour les JTable lorsq'une modification a été effectuée.
     */
    public void updateDate() {
        remplirTableauMissions();
        remplirTableauMissionsSynth();
        remplirListePersoSansMiss();
    }

    DefaultTableCellRenderer rMissionEtat = new DefaultTableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            super.getTableCellRendererComponent(
                    table, value, isSelected, hasFocus, row, column);
            String etat = (String) value;
            setBackground(Mission.getCouleurEtat(etat));
            setForeground(Color.WHITE);

            return this;
        }
    };

    public class ButtonModifierRenderer extends JButton implements TableCellRenderer {

        ImageIcon icone;
        String version;

        public ButtonModifierRenderer(ImageIcon icone, String version) {
            this.icone = icone;
            this.version = version;
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean isFocus, int row, int col) {
            if (version.equals("modifier")) {
                setIcon(icone);
                setBackground(Color.LIGHT_GRAY);
            } else if (version.equals("supprimer")) {
                setBackground(new Color(189, 30, 45));
                setForeground(Color.white);
                setText("X");
            }

            return this;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Menu2().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Menu2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddMission;
    private javax.swing.JButton jButtonAjouterPersonne;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTotMiss;
    private javax.swing.JLabel jLabelTotSansMiss;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelCompetence;
    private javax.swing.JPanel jPanelMission;
    private javax.swing.JPanel jPanelPersonnel;
    private javax.swing.JPanel jPanelTdB;
    private javax.swing.JPanel jPanelTitre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable jTableCompetences;
    private javax.swing.JTable jTableDuPersonnel;
    private javax.swing.JTable jTableMission;
    private javax.swing.JTable jTableSyntheseMission;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextFieldRechEtat;
    private javax.swing.JTextField jTextFieldRechNom;
    private javax.swing.JTextField jTextFieldRechNomMiss;
    // End of variables declaration//GEN-END:variables
}
